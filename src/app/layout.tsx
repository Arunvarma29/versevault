import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import { ClerkProvider } from "@clerk/nextjs";
import { currentUser } from "@clerk/nextjs/server";

import { prisma } from "@/lib/prisma";
import Navbar from "@/components/home/header/navbar";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

const saveUserData = async () => {
    const user = await currentUser();
    if (!user) {
      return null;
    }
    const loggedInUser = await prisma.user.findUnique({
      where: { clerkUserId: user.id },
    });
    if (!loggedInUser) {
      await prisma.user.create({
        data: {
          name: `${user.fullName}`,
          clerkUserId: user.id,
          email: user.emailAddresses[0].emailAddress,
          imageUrl: user.imageUrl,
        },
      });
    }
  }

  saveUserData();
  console.log("Data is succussessfully stored");

  return (
    <ClerkProvider publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}>
      <html lang="en" suppressHydrationWarning>
        <body

          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange >
                  <Navbar/>
            <div> {children}</div>

          </ThemeProvider>
        
        </body>
      </html>
    </ClerkProvider>
  );
}


